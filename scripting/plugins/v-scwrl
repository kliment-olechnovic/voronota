function print_help_and_exit
{
cat >&2 << 'EOF'

'v-scwrl' is a script that can be called from the 'voronota-scripting-env'
environment to use Scwrl4 to generate protein objects with rebuil sidechains

Options:
    --source | -s             string   *  source object name
    --destination | -d        string   *  destination object name
    --help | -h                           flag to display help message and exit

EOF
exit 1
}

v-test-env || { echo >&2 "Error: 'voronota-scripting-env' environment not valid"; exit 1; }

SOURCE_NAME=""
DESTINATION_NAME=""
HELP_MODE=false

while [[ $# > 0 ]]
do
	OPTION="$1"
	OPTARG="$2"
	shift
	case $OPTION in
	-s|--source)
		SOURCE_NAME="$OPTARG"
		shift
		;;
	-d|--destination)
		DESTINATION_NAME="$OPTARG"
		shift
		;;
	-h|--help)
		HELP_MODE=true
		;;
	*)
		echo >&2 "Error: invalid command line option '$OPTION'"
		exit 1
		;;
	esac
done

if $HELP_MODE
then
	print_help_and_exit
fi

if [ -z "$SOURCE_NAME" ]
then
	echo >&2 "Error: missing source name"
	exit 1
fi

if [ -z "$DESTINATION_NAME" ]
then
	echo >&2 "Error: missing destination name"
	exit 1
fi

command -v Scwrl4 &> /dev/null || { echo >&2 "Error: 'Scwrl4' executable not in binaries path"; exit 1; }

v-do-silent "list-objects '$SOURCE_NAME'"

if [ "$V_TAIL_SUCCESS" != "true" ]
then
	echo >&2 "Error: no source object '$SOURCE_NAME'"
	exit 1
fi

readonly TMPLDIR=$(mktemp -d)

function on_exit_final
{
	rm -r $TMPLDIR
}

trap on_exit_final EXIT

v-do-silent  "save-atoms -on-objects '$SOURCE_NAME' -use '[-aname CA,C,N,O,OXT]' -as-pdb -file '$TMPLDIR/source.pdb'"

if [ ! -s "$TMPLDIR/source.pdb" ]
then
	echo >&2 "Error: no source backbone atoms"
	exit 1
fi

Scwrl4 -h -i $TMPLDIR/source.pdb -o $TMPLDIR/destination.pdb > /dev/null

if [ ! -s "$TMPLDIR/destination.pdb" ]
then
	echo >&2 "Error: side-chain rebuilding failed"
	exit 1
fi

v-do-silent "load -file '$TMPLDIR/destination.pdb' -title '$DESTINATION_NAME'"

v-do "list-objects"
