function print_help_and_exit
{
cat >&2 << 'EOF'

'v-save-rotating-gif' is a script that can be called from the 'voronota-scripting-env'
environment to generate a rotating GIF image from 'voronota-viewer' screenshot image

Options:
    --output | -o     string   *  output GIF file name, alternatively can be provided as an unnamed argument
    --help | -h                   flag to display help message and exit

EOF
exit 1
}

v-test-env || { echo >&2 "Error: 'voronota-scripting-env' environment not valid"; exit 1; }

if [ "$V_GUI" != "true" ]
then
	echo >&2 "Error: Voronota not running in GUI mode"
	exit 1
fi

OUTPUT_FILE=""
HELP_MODE=false

while [[ $# > 0 ]]
do
	OPTION="$1"
	OPTARG="$2"
	shift
	case $OPTION in
	-o|--outfile)
		OUTPUT_FILE="$OPTARG"
		shift
		;;
	-h|--help)
		HELP_MODE=true
		;;
	*)
		[ -z "$OUTPUT_FILE" ] || { echo >&2 "Error: invalid command line option '$OPTION'"; exit 1; }
		OUTPUT_FILE="$OPTION"
		;;
	esac
done

if $HELP_MODE
then
	print_help_and_exit
fi

if [ -z "$OUTPUT_FILE" ]
then
	echo >&2 "Error: missing output file path"
	exit 1
fi

if [ "$(basename "$OUTPUT_FILE")" == "$(basename "$OUTPUT_FILE" .gif)" ]
then
	OUTPUT_FILE="${OUTPUT_FILE}.gif"
fi

command -v convert &> /dev/null || { echo >&2 "Error: 'convert' executable not in binaries path"; exit 1; }

readonly TMPLDIR=$(mktemp -d)

function on_exit_final
{
	rm -r $TMPLDIR
}

trap on_exit_final EXIT

STEPS=40
STEP_ANGLE=3

STEPS="$((${STEPS}/2*2))"
STEP_RETURN="$((${STEPS}/2+1))"

seq 1 "$STEPS" | while read NUM
do
	ID="$(echo "$NUM" | sed 's/^/00000/' | sed 's/.*\(....\)$/\1/')"
	
	if [ "$NUM" -lt "$STEP_RETURN" ]
	then
		v-do-silent "screenshot $TMPLDIR/img${ID}.ppm"
		v-do-silent "rotate -axis 0 1 0 -angle $STEP_ANGLE"
	else
		if [ "$NUM" -eq "$STEP_RETURN" ]
		then
			v-do-silent "rotate -axis 0 1 0 -angle -$STEP_ANGLE"
		else
			v-do-silent "screenshot $TMPLDIR/img${ID}.ppm"
			v-do-silent "rotate -axis 0 1 0 -angle -$STEP_ANGLE"
		fi
	fi
done

convert -delay 4 $TMPLDIR/img*.ppm -loop 0 "$OUTPUT_FILE"

