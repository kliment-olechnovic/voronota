#!/bin/bash

function print_help_and_exit
{
cat >&2 << 'EOF'

'voronota-scripting-interactive-env' script starts an interactive Bash session for conrolling Voronota.
It uses 'voronota-scripting-env' script to initialize the Bash session.

Options:
    --no-gui | -t                      flag to not run 'voronota-viewer'
    --help | -h                        flag to display help message and exit

EOF
exit 1
}

PASSARGS=()
V_GUI=true
HELP_MODE=false

while [[ $# > 0 ]]
do
	OPTION="$1"
	OPTARG="$2"
	shift
	case $OPTION in
	-t|--no-gui)
		V_GUI=false
		;;
	-h|--help)
		HELP_MODE=true
		;;
	*)
		PASSARGS+=("$OPTION")
		;;
	esac
done

if $HELP_MODE
then
	print_help_and_exit
fi

INIT_FILE="$(which voronota-scripting-env)"

if [ ! -s "$INIT_FILE" ]
then
	echo >&2 "Error: 'voronota-scripting-env' script not found in binaries path"
	exit 1
fi

readonly TMPLDIR=$(mktemp -d)
trap "rm -r $TMPLDIR" EXIT

{
	cat "$INIT_FILE"
	
	for PASSARG in "${PASSARGS[@]}"
	do
		if [ -s "$PASSARG" ]
		then
			BASENAME="$(basename "$PASSARG")"
			EXT="$(echo "${BASENAME##*.}" | tr '[:upper:]' '[:lower:]')"
			if [ "$EXT" == "pdb" ] || [ "$EXT" == "cif" ] || [ "$EXT" == "mmcif" ] || [ "$EXT" == "ent" ] || [ "$EXT" == "atoms" ] || [ "$EXT" == "pa" ] || [ "$EXT" == "pac" ]
			then
				echo
				echo "v-load '$PASSARG'"
			else
				if [ "$EXT" == "sh" ] || [ "$EXT" == "bash" ] || [ "$EXT" == "vbash" ]
				then
					echo
					echo "$PASSARG"
				else
					echo
					echo >&2 "Unrecognize extension of file '$PASSARG'"
				fi
			fi
		else
			echo
			echo "$PASSARG"
		fi
	done
} \
> "$TMPLDIR/full_init_file"

export V_GUI

bash --init-file "$TMPLDIR/full_init_file" -i

