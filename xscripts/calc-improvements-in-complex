#!/bin/bash

readonly ZEROARG="$0"
INFILE="$1"

if [ -z "$INFILE" ] && [ ! -s "$INFILE" ]
then
	echo >&2 "Error: missing input file"
	exit 1
fi

if [[ "$ZEROARG" == *"/"* ]]
then
	cd $(dirname $ZEROARG)
	export PATH=$(pwd):$PATH
	cd - &> /dev/null
fi

readonly TMPLDIR=$(mktemp -d)
trap "rm -r $TMPLDIR" EXIT

cat "$INFILE" \
| voronota get-balls-from-atoms-file --annotated \
| tee "$TMPLDIR/balls" \
| voronota x-expand-descriptors \
| awk '{print $1}' \
| egrep -v '^\.' \
| sort \
| uniq \
> "$TMPLDIR/chains"

if [ "$(cat $TMPLDIR/chains | wc -l)" -lt "2" ]
then
	echo >&2 "Error: input file does not contain two or more chains"
	exit 1
fi

OUTDIR="$TMPLDIR/output"
mkdir -p "$OUTDIR"

voronota-voromqa \
  --input "$INFILE" \
  --smoothing-window "0" \
  --output-atom-scores "$OUTDIR/complex_output/atom_scores" \
  --output-residue-scores "$OUTDIR/complex_output/residue_scores" \
> /dev/null

cat "$TMPLDIR/chains" | while read CHAIN
do
	CHAIN_INFILE="$TMPLDIR/chain_${CHAIN}_atoms.pdb"
	CHAIN_OUTDIR="$OUTDIR/chain_${CHAIN}_output"
	
	cat "$TMPLDIR/balls" \
	| voronota query-balls \
	  --match "c<${CHAIN}>" \
	| voronota x-write-balls-to-atoms-file \
	  --pdb-output "$CHAIN_INFILE" \
	> /dev/null
	
	voronota-voromqa \
	  --input "$CHAIN_INFILE" \
	  --smoothing-window "0" \
	  --output-atom-scores "$CHAIN_OUTDIR/atom_scores" \
	  --output-residue-scores "$CHAIN_OUTDIR/residue_scores" \
	> /dev/null
	
	cat "$CHAIN_OUTDIR/atom_scores" >> "$TMPLDIR/all_chains_atom_scores"
	cat "$CHAIN_OUTDIR/residue_scores" >> "$TMPLDIR/all_chains_residue_scores"
done

R --vanilla --args "$OUTDIR/complex_output/atom_scores" "$TMPLDIR/all_chains_atom_scores" "$TMPLDIR/atoms_result" &> /dev/null << 'EOF'
args=commandArgs(TRUE);
infile1=args[1];
infile2=args[2];
outfile=args[3];
t1=read.table(infile1, header=FALSE, stringsAsFactors=FALSE);
t2=read.table(infile2, header=FALSE, stringsAsFactors=FALSE);
t=merge(t1, t2, by="V1");
N=length(t[[1]]);
NI=length(which(t$V2.x>t$V2.y));
ND=length(which(t$V2.x<t$V2.y));
result=c(N, NI, ND, NI/(NI+ND));
write(result, outfile, ncolumns=length(result));
EOF

echo $INFILE $(cat $TMPLDIR/atoms_result)

