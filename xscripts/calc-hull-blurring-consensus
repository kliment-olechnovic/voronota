#!/bin/bash

readonly ZEROARG=$0
OUTDIR="$1"
INLIST="$2"

if [ -z "$INLIST" ] || [ -z "$OUTDIR" ]
then
	echo >&2 "Error: missing arguments"
	exit 1
fi

if [ ! -s "$INLIST" ]
then
	echo >&2 "Error: invalid list file '$INLIST'"
	exit 1
fi

FIRSTFILE="$(head -1 "$INLIST")"

if [ -z "$FIRSTFILE" ] || [ ! -s "$FIRSTFILE" ]
then
	echo >&2 "Error: invalid first file '$FIRSTFILE'"
	exit 1
fi

if [[ "$ZEROARG" == *"/"* ]]
then
	cd $(dirname $ZEROARG)
	export PATH=$(pwd):$PATH
	cd - &> /dev/null
fi

command -v voronota-voromqa-with-hull-blurring &> /dev/null || { echo >&2 "Error: 'voronota-voromqa-with-hull-blurring' executable not in binaries path"; exit 1; }

mkdir -p "$OUTDIR/singles"

if [ ! -d "$OUTDIR/singles" ]
then
	echo >&2 "Error: could not create output directory"
	exit 1
fi

readonly TMPLDIR=$(mktemp -d)
trap "rm -r $TMPLDIR" EXIT

cat "$INLIST" | while read INFILE
do
	if [ ! -s "$OUTDIR/singles/$(basename $INFILE)/hbo_residue_profile" ]
	then
		voronota-voromqa-with-hull-blurring \
		  --cache-dir "$OUTDIR/cache" \
		  --input "$INFILE" \
		  --hull-blurring-reference "$FIRSTFILE" \
		  --hull-blurring-depth 3 \
		  --hull-blurring-output "$OUTDIR/singles/$(basename $INFILE)/hbo"
	fi
done

cat "$OUTDIR/singles/$(basename $FIRSTFILE)/hbo_residue_profile" | awk '{print $1 " " $2 " " $3 " 0 0"}' > "$TMPLDIR/accumulation"

cat "$INLIST" | while read INFILE
do
	paste "$TMPLDIR/accumulation" <(cat "$OUTDIR/singles/$(basename $INFILE)/hbo_residue_profile" | awk '{print $4}') \
	| awk '{print $1 " " $2 " " $3 " " ($4+1) " " ($5+$6)}' \
	> "$TMPLDIR/accumulation_update"
	mv "$TMPLDIR/accumulation_update" "$TMPLDIR/accumulation"
done

cat "$TMPLDIR/accumulation" \
| awk '{print $1 " " $2 " " $3 " " ($5/$4)}' \
> "$OUTDIR/hbo_residue_profile_consensus"

R --vanilla --args "$OUTDIR/hbo_residue_profile_consensus" "$OUTDIR/plot_" &> /dev/null << 'EOF'
args=commandArgs(TRUE);
infile=args[1];
output_prefix=args[2];
t=read.table(infile, header=FALSE, stringsAsFactors=FALSE);
png(filename=paste(output_prefix, "hist.png", sep=""), width=5, height=5, units="in", res=200);
hist(t$V4, breaks=seq(0, 0.5, 0.01), xlab="Normalized energy", main="Histogram of normalized energy");
dev.off();
png(filename=paste(output_prefix, "wave.png", sep=""), width=15, height=5, units="in", res=200);
plot(t$V4, ylab="Normalized energy", type="l");
dev.off();
EOF

cat "$OUTDIR/hbo_residue_profile_consensus" \
| awk '{print "c<" $1 ">r<" $2 ">R<" $3 "> " $4}' \
| sed 's/c<\.>//' \
> "$TMPLDIR/consensus_adjuncts"

cat "$INLIST" | head -1 | while read INFILE
do
	cat "$INFILE" \
	| voronota get-balls-from-atoms-file \
	  --annotated \
	| voronota query-balls \
	  --match 'R<LEU,ALA,GLY,VAL,GLU,SER,LYS,ILE,ASP,THR,ARG,PRO,ASN,PHE,GLN,TYR,HIS,MET,TRP,CYS,MSE,SEC>' \
	| voronota query-balls \
	  --drop-adjuncts \
	  --drop-altloc-indicators \
	| voronota query-balls \
	  --set-adjuncts 'score=0' \
	  --set-external-adjuncts "$TMPLDIR/consensus_adjuncts" \
	  --set-external-adjuncts-name score \
	| voronota x-write-balls-to-atoms-file \
	  --pdb-output "$OUTDIR/singles/$(basename $INFILE)/hbo_residue_profile_consensus.pdb" \
	  --pdb-output-b-factor score \
	> /dev/null
done

cp "$OUTDIR/singles/$(basename $FIRSTFILE)/hbo_residue_profile_consensus.pdb" "$OUTDIR/hbo_residue_profile_consensus.pdb"
