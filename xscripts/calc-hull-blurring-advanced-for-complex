#!/bin/bash

readonly ZEROARG="$0"
INFILE="$1"
OUTDIR="$2"

if [ -z "$INFILE" ] && [ ! -s "$INFILE" ]
then
	echo >&2 "Error: missing input file"
	exit 1
fi

if [[ "$ZEROARG" == *"/"* ]]
then
	cd $(dirname $ZEROARG)
	export PATH=$(pwd):$PATH
	cd - &> /dev/null
fi

command -v voronota-voromqa-with-hull-blurring-advanced &> /dev/null || { echo >&2 "Error: 'voronota-voromqa-with-hull-blurring-advanced' executable not in binaries path"; exit 1; }

readonly TMPLDIR=$(mktemp -d)
trap "rm -r $TMPLDIR" EXIT

cat "$INFILE" \
| voronota get-balls-from-atoms-file --annotated \
| tee "$TMPLDIR/balls" \
| voronota x-expand-descriptors \
| awk '{print $1}' \
| egrep -v '^\.' \
| sort \
| uniq \
> "$TMPLDIR/chains"

if [ "$(cat $TMPLDIR/chains | wc -l)" -lt "2" ]
then
	echo >&2 "Error: input file does not contain two or more chains"
	exit 1
fi

mkdir -p "$OUTDIR"

voronota-voromqa-with-hull-blurring-advanced \
  --input "$INFILE" \
  --output-contacts "$TMPLDIR/contacts" \
  --hull-blurring-output-dir "$OUTDIR/complex_output" \
> /dev/null

cat "$TMPLDIR/contacts" \
| voronota query-contacts \
  --no-same-chain \
  --no-solvent \
  --inter-residue \
| awk '{print $1 " " $2}' \
| tr ' ' '\n' \
| sort \
| uniq \
> "$TMPLDIR/interface_residue_ids"

cat "$TMPLDIR/chains" | while read CHAIN
do
	CHAIN_INFILE="$TMPLDIR/chain_${CHAIN}_atoms.pdb"
	CHAIN_OUTDIR="$OUTDIR/chain_${CHAIN}_output"
	
	cat "$TMPLDIR/balls" \
	| voronota query-balls \
	  --match "c<${CHAIN}>" \
	| voronota x-write-balls-to-atoms-file \
	  --pdb-output "$CHAIN_INFILE" \
	> /dev/null
	
	voronota-voromqa-with-hull-blurring-advanced \
	  --input "$CHAIN_INFILE" \
	  --hull-blurring-output-dir "$CHAIN_OUTDIR" \
	> /dev/null
	
	cat "$CHAIN_OUTDIR/residue_profile" >> "$TMPLDIR/all_chains_residue_profile"
done

cat "$TMPLDIR/all_chains_residue_profile" \
| awk '{print "c<" $1 ">r<" $2 ">R<" $3 "> " $6}' \
> "$TMPLDIR/all_chains_residue_profile_adjuncts"

cat $TMPLDIR/balls \
| voronota query-balls \
  --match 'R<LEU,ALA,GLY,VAL,GLU,SER,LYS,ILE,ASP,THR,ARG,PRO,ASN,PHE,GLN,TYR,HIS,MET,TRP,CYS,MSE,SEC>&A<CA>' \
| voronota query-balls \
  --drop-adjuncts \
  --drop-altloc-indicators \
| voronota query-balls \
  --set-adjuncts 'iface=0' \
  --set-external-adjuncts <(cat "$TMPLDIR/interface_residue_ids" | awk '{print $1 " 1"}') \
  --set-external-adjuncts-name iface \
| voronota query-balls \
  --set-adjuncts 'score=0' \
  --set-external-adjuncts "$TMPLDIR/all_chains_residue_profile_adjuncts" \
  --set-external-adjuncts-name score \
| awk '{print $1 " " $7}' \
| sed 's/.iface=/ /' \
| sed 's/.score=/ /' \
| voronota x-expand-descriptors \
| awk '{print $1 " " $2 " " $6 " " $8 " " $9}' \
> "$OUTDIR/residue_profile"

cat "$OUTDIR/residue_profile" \
| awk '{print "c<" $1 ">r<" $2 ">R<" $3 "> " $5}' \
> "$TMPLDIR/residue_profile_adjuncts"

cat $TMPLDIR/balls \
| voronota query-balls \
  --drop-altloc-indicators \
  --set-adjuncts 'score=0' \
  --set-external-adjuncts "$TMPLDIR/residue_profile_adjuncts" \
  --set-external-adjuncts-name score \
| voronota x-write-balls-to-atoms-file \
  --pdb-output "$OUTDIR/complex_with_probabilities_refined.pdb" \
  --pdb-output-b-factor score \
| voronota x-write-balls-to-atoms-file \
  --pdb-output "$OUTDIR/complex_with_probabilities_unrefined.pdb" \
  --pdb-output-b-factor score \
  --pdb-output-template "$INFILE" \
> /dev/null

cat "$OUTDIR/residue_profile" | egrep -v ' 0 0$' > "$TMPLDIR/residue_profile_not_buried"

R --vanilla --args "$TMPLDIR/residue_profile_not_buried" "$OUTDIR/residue_profile_not_buried_" &> /dev/null << 'EOF'
args=commandArgs(TRUE);
infile=args[1];
output_prefix=args[2];
t=read.table(infile, header=FALSE, stringsAsFactors=FALSE);
b=t$V4
v=t$V5;
d0=density(v);
d1=density(v[which(b<0.5)]);
d2=density(v[which(b>=0.5)]);
d_y_max=max(c(d0$y, d1$y, d2$y));
png(filename=paste(output_prefix, "density.png", sep=""), width=5, height=5, units="in", res=200);
plot(d0, ylim=c(0, d_y_max), xlab="Probability", main="Densities of probabilities");
lines(d1$x, d1$y, col="blue");
lines(d2$x, d2$y, col="red");
dev.off();
png(filename=paste(output_prefix, "histogram.png", sep=""), width=5, height=5, units="in", res=200);
hist(v, breaks=seq(0, 1, 0.05), xlab="Probability", main="Histogram of probabilities");
hist(v[which(b<0.5)], breaks=seq(0, 1, 0.05), col=rgb(0, 0, 1, 0.5), add=TRUE);
hist(v[which(b>=0.5)], breaks=seq(0, 1, 0.05), col=rgb(1, 0, 0, 0.5), add=TRUE);
dev.off();
EOF

mkdir -p "$OUTDIR/classification_scoring"

cat "$TMPLDIR/residue_profile_not_buried" | awk '{print $1 "_" $2 "_" $3 " " $4}' > "$TMPLDIR/scores_references"
cat "$TMPLDIR/residue_profile_not_buried" | awk '{print $1 "_" $2 "_" $3 " " $5}' > "$TMPLDIR/scores_test"
echo "$TMPLDIR/scores_references" "$TMPLDIR/scores_test" \
| voronota score-scores \
  --reference-threshold 0.5 \
  --testable-step 0.01 \
  --outcomes-file "$OUTDIR/classification_scoring/classification_outcomes" \
  --ROC-curve-file "$OUTDIR/classification_scoring/classification_roc_curve" \
  --PR-curve-file "$OUTDIR/classification_scoring/classification_pr_curve" \
> "$OUTDIR/classification_scoring/classification_summary"

for CURVE_POINTS_FILE in "$OUTDIR/classification_scoring/classification_roc_curve" "$OUTDIR/classification_scoring/classification_pr_curve"
do
R --vanilla --args "$CURVE_POINTS_FILE" "$CURVE_POINTS_FILE.png" &> /dev/null << 'EOF'
args=commandArgs(TRUE);
infile=args[1];
outfile=args[2];
t=read.table(infile, header=FALSE, stringsAsFactors=FALSE);
x=t$V1
y=t$V2;
png(filename=outfile, width=5, height=5, units="in", res=200);
plot(t$V1, t$V2, xlim=c(0, 1), ylim=c(0, 1), type="l", xlab="x", ylab="y", main="Curve");
dev.off();
EOF
done
