#!/bin/bash

function print_help_and_exit
{
cat >&2 << EOF

'voronota-voromqa-global-plot' script plots VoroMQA global scores in the context of statistics derived from the scores of X-ray structures.

Basic options:
    --input | -i                   string   *  input file with one or more VoroMQA output lines
    --output | -o                  string   *  output PNG file
    --dpi                          number      output image DPI, default is 100
    --help | -h                                flag to display help message and exit

EOF
exit 1
}

readonly ZEROARG=$0
INFILE=""
OUTFILE=""
DPIVAL="100"
HELP_MODE=false

while [[ $# > 0 ]]
do
	OPTION="$1"
	OPTARG="$2"
	shift
	case $OPTION in
	-i|--input)
		INFILE="$OPTARG"
		shift
		;;
	-o|--output)
		OUTFILE="$OPTARG"
		shift
		;;
	--dpi)
		DPIVAL="$OPTARG"
		shift
		;;
	-h|--help)
		HELP_MODE=true
		;;
	*)
		echo >&2 "Error: invalid command line option '$OPTION'"
		exit 1
		;;
	esac
done

if [ -z "$INFILE" ] || [ -z "$OUTFILE" ] ||$HELP_MODE
then
	print_help_and_exit
fi

if [ ! -s "$INFILE" ]
then
	echo >&2 "Error: input file '$INFILE' does not exist or is empty"
	exit 1
fi

command -v R &> /dev/null || { echo >&2 "Error: 'R' command, needed for plotting, is not available"; exit 1; }

readonly TMPLDIR=$(mktemp -d)
trap "rm -r $TMPLDIR" EXIT

cat "$INFILE" \
| awk '{if(length($2)>0 && length($3)>0){print $3 " " $2}}' \
> "$TMPLDIR/scores"

if [ ! -s "$TMPLDIR/scores" ]
then
	echo >&2 "Error: input file has missing values"
	exit 1
fi

cat > "$TMPLDIR/quantiles_by_length" << EOF
length  quantile05  quantile50  quantile95
50      0.331       0.471       0.560
100     0.364       0.488       0.571
150     0.396       0.505       0.581
200     0.424       0.518       0.590
250     0.444       0.529       0.598
300     0.458       0.536       0.604
350     0.465       0.541       0.608
400     0.470       0.545       0.609
450     0.474       0.547       0.609
500     0.476       0.548       0.607
550     0.479       0.549       0.606
600     0.482       0.550       0.605
650     0.487       0.551       0.604
700     0.491       0.552       0.604
750     0.494       0.553       0.603
800     0.496       0.553       0.602
850     0.496       0.553       0.601
900     0.495       0.552       0.600
950     0.494       0.551       0.599
1000    0.493       0.550       0.598
EOF

{
cat << 'EOF'
args=commandArgs(TRUE);
infile_quantiles=args[1];
infile_scores=args[2];
outfile=args[3];
t_quantiles=read.table(infile_quantiles, header=TRUE, stringsAsFactors=FALSE);
t_scores=read.table(infile_scores, header=FALSE, stringsAsFactors=FALSE);
png(filename=outfile, width=8, height=6, units="in", res=DPIVAL);
plot(x=c(0, 1000), y=c(0, 1), xlim=c(0, 1000), ylim=c(0, 1), type="n", main="The provided VoroMQA global scores in the context\nof statistics of high-quality X-ray structure scores", cex.main=1.0, xlab="Number of residues", ylab="VoroMQA global score");
points(x=t_quantiles$length, y=t_quantiles$quantile05, type="l", lwd=2, col="red");
points(x=t_quantiles$length, y=t_quantiles$quantile50, type="l", lwd=2, col="gray");
points(x=t_quantiles$length, y=t_quantiles$quantile95, type="l", lwd=2, col="blue");
points(x=t_scores$V1, y=t_scores$V2, col="black");
legend("topright", legend=c("95%", "median", "5%"), col=c("blue", "gray", "red"), lty=c(1, 1, 1), lwd=c(2, 2, 2), bty="n");
dev.off();
EOF
} \
| sed "s/DPIVAL/$DPIVAL/" \
| R --slave --vanilla --args "$TMPLDIR/quantiles_by_length" "$TMPLDIR/scores" "$TMPLDIR/plot.png" &> /dev/null

if [ ! -s "$TMPLDIR/plot.png" ]
then
	echo >&2 "Error: failed to produce plot image"
	exit 1
fi

mv "$TMPLDIR/plot.png" "$OUTFILE"
