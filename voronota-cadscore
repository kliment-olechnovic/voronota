#!/bin/bash

readonly ZEROARG=$0
INFILE_TARGET_PDB=""
INFILE_MODEL_PDB=""
ATOMS_QUERY_PARAMETERS=""
CONTACTS_QUERY_PARAMETERS=""
OUTFILE_RESIDUE_SCORES=""
SMOOTHING_WINDOW="1"
HELP_MODE=false

while getopts "t:m:a:c:r:s:h" OPTION
do
	case $OPTION in
	t)
		INFILE_TARGET_PDB=$OPTARG
		;;
	m)
		INFILE_MODEL_PDB=$OPTARG
		;;
	a)
		ATOMS_QUERY_PARAMETERS="$OPTARG"
		;;
	c)
		CONTACTS_QUERY_PARAMETERS="$OPTARG"
		;;
	r)
		OUTFILE_RESIDUE_SCORES=$OPTARG
		;;
	s)
		SMOOTHING_WINDOW=$OPTARG
		;;
	h)
		HELP_MODE=true
		;;
	esac
done

if [ -z "$INFILE_TARGET_PDB" ] || [ -z "$INFILE_MODEL_PDB" ] || $HELP_MODE
then
cat >&2 << EOF
Script parameters:
    -t input_target_file.pdb
    -m input_model_file.pdb
    [-a atoms_query_parameters_string]
    [-c contacts_query_parameters_string]
    [-r output_residue_scores_file]
    [-s residue_scores_smoothing_window_size]
EOF
exit 1
fi

if [[ $ZEROARG == *"/"* ]]
then
	cd $(dirname $ZEROARG)
	export PATH=$(pwd):$PATH
	cd - &> /dev/null
fi

command -v voronota &> /dev/null || { echo >&2 "Error: 'voronota' executable not in binaries path"; exit 1; }
command -v voronota-resources &> /dev/null || { echo >&2 "Error: 'voronota-resources' executable not in binaries path"; exit 1; }

if [ ! -s "$INFILE_TARGET_PDB" ]
then
	echo >&2 "Error: input target file does not exist"
	exit 1
fi

if [ ! -s "$INFILE_MODEL_PDB" ]
then
	echo >&2 "Error: input model file does not exist"
	exit 1
fi

readonly TMPDIR=$(mktemp -d)
trap "rm -r $TMPDIR" EXIT

cp $INFILE_TARGET_PDB $TMPDIR/target
cp $INFILE_MODEL_PDB $TMPDIR/model

for WORKFILE in $TMPDIR/target $TMPDIR/model
do
	cat $WORKFILE \
	| voronota get-balls-from-atoms-file \
	  --annotated \
	  --radii-file <(voronota-resources radii) \
	  --include-heteroatoms \
	| voronota query-balls \
	  --drop-altloc-indicators \
	  --drop-atom-serials \
	| voronota query-balls $ATOMS_QUERY_PARAMETERS \
	> $WORKFILE.balls
	
	if [ ! -s "$WORKFILE.balls" ]
	then
		echo >&2 "Error: no atoms for $(basename $WORKFILE)"
		exit 1
	fi

	cat $WORKFILE.balls \
	| voronota calculate-contacts \
	  --annotated \
	| voronota query-contacts \
	  --match-min-seq-sep 1 \
	  --no-solvent \
	| voronota query-contacts \
	  --match-first 'A<C>' \
	  --match-second 'A<N>' \
	  --match-max-seq-sep 1 \
	  --match-max-dist 1.6 \
	  --invert \
	> $WORKFILE.all_contacts
	
	cat $WORKFILE.all_contacts \
	| voronota query-contacts $CONTACTS_QUERY_PARAMETERS \
	| awk '{print $1 " " $2 " " $3}' \
	> $WORKFILE.contacts
	
	if [ ! -s "$WORKFILE.contacts" ]
	then
		echo >&2 "Error: no contacts for $(basename $WORKFILE)"
		exit 1
	fi
done

cat $TMPDIR/model.contacts \
| voronota compare-contacts \
  --target-contacts-file $TMPDIR/target.contacts \
  --smoothing-window $SMOOTHING_WINDOW \
  --smoothed-scores-file $TMPDIR/smoothed_residue_cad_scores \
  --depth 0 \
> $TMPDIR/global_cad_scores

if [ -n "$OUTFILE_RESIDUE_SCORES" ]
then
	mkdir -p $(dirname $OUTFILE_RESIDUE_SCORES)
	cp $TMPDIR/smoothed_residue_cad_scores "$OUTFILE_RESIDUE_SCORES"
fi

echo $INFILE_TARGET_PDB $INFILE_MODEL_PDB $(cat $TMPDIR/global_cad_scores | grep 'residue_level_global' | awk '{print $2}')
