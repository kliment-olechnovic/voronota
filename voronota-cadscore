#!/bin/bash

set +e

INFILE_TARGET=""
INFILE_MODEL=""
OUTFILE_RESIDUE_SCORES_ON_TARGET=""
OUTFILE_RESIDUE_SCORES_ON_MODEL=""
SMOOTHING_WINDOW="1"
HELP_MODE=false

while getopts "t:m:T:M:s:h" OPTION
do
	case $OPTION in
	t)
		INFILE_TARGET=$OPTARG
		;;
	m)
		INFILE_MODEL=$OPTARG
		;;
	T)
		OUTFILE_RESIDUE_SCORES_ON_TARGET=$OPTARG
		;;
	M)
		OUTFILE_RESIDUE_SCORES_ON_MODEL=$OPTARG
		;;
	s)
		SMOOTHING_WINDOW=$OPTARG
		;;
	h)
		HELP_MODE=true
		;;
	esac
done

if [ -z "$INFILE_TARGET" ] || [ -z "$INFILE_MODEL" ] || $HELP_MODE
then
cat >&2 << EOF
Script parameters:
    -t input_target_file.pdb
    -m input_model_file.pdb
    [-T output_residue_scores_on_target_file.pdb]
    [-M output_residue_scores_on_model_file.pdb]
    [-s residue_scores_smoothing_window_size]
EOF
exit 1
fi

if [[ $0 == *"/"* ]]
then
	cd $(dirname $0)
	export PATH=$(pwd):$PATH
	cd - &> /dev/null
fi

command -v voronota &> /dev/null || { echo >&2 "Error: 'voronota' executable not in binaries path"; exit 1; }
command -v voronota-resources &> /dev/null || { echo >&2 "Error: 'voronota-resources' executable not in binaries path"; exit 1; }

if [ ! -s "$INFILE_TARGET" ]
then
	echo >&2 "Error: input target file does not exist or is empty"
	exit 1
fi

if [ ! -s "$INFILE_MODEL" ]
then
	echo >&2 "Error: input model file does not exist or is empty"
	exit 1
fi

readonly TMPDIR=$(mktemp -d)
trap "rm -r $TMPDIR" EXIT

cp $INFILE_TARGET $TMPDIR/target
cp $INFILE_MODEL $TMPDIR/model

for WORKFILE in $TMPDIR/target $TMPDIR/model
do
	cat $WORKFILE \
	| voronota get-balls-from-atoms-file \
	  --annotated \
	  --radii-file <(voronota-resources radii) \
	| voronota query-balls \
	  --drop-adjuncts \
	  --drop-altloc-indicators \
	| tee $WORKFILE.balls \
	| voronota calculate-contacts \
	  --annotated \
	| voronota query-contacts \
	  --match-min-seq-sep 1 \
	  --no-solvent \
	| voronota query-contacts \
	  --match-first 'A<C>' \
	  --match-second 'A<N>' \
	  --match-max-seq-sep 1 \
	  --match-max-dist 1.6 \
	  --invert \
	| awk '{print $1 " " $2 " " $3}' \
	> $WORKFILE.contacts
done

cat $TMPDIR/model.contacts \
| voronota compare-contacts \
  --target-contacts-file $TMPDIR/target.contacts \
  --smoothing-window $SMOOTHING_WINDOW \
  --smoothed-scores-file $TMPDIR/smoothed_residue_cad_scores \
  --depth 0 \
| grep "residue_level_global" \
| awk '{print $2}' \
> $TMPDIR/global_cad_score

if [ -n "$OUTFILE_RESIDUE_SCORES_ON_TARGET" ]
then
	mkdir -p $(dirname $OUTFILE_RESIDUE_SCORES_ON_TARGET)
	cat $TMPDIR/target.balls \
	| voronota query-balls \
	  --set-external-adjuncts $TMPDIR/smoothed_residue_cad_scores \
	  --set-external-adjuncts-name rcadscore \
	| voronota write-balls-to-atoms-file \
	  --pdb-output $OUTFILE_RESIDUE_SCORES_ON_TARGET \
	  --pdb-output-b-factor rcadscore \
	> /dev/null
fi

if [ -n "$OUTFILE_RESIDUE_SCORES_ON_MODEL" ]
then
	mkdir -p $(dirname $OUTFILE_RESIDUE_SCORES_ON_MODEL)
	cat $TMPDIR/model.balls \
	| voronota query-balls \
	  --set-external-adjuncts $TMPDIR/smoothed_residue_cad_scores \
	  --set-external-adjuncts-name rcadscore \
	| voronota write-balls-to-atoms-file \
	  --pdb-output $OUTFILE_RESIDUE_SCORES_ON_MODEL \
	  --pdb-output-b-factor rcadscore \
	> /dev/null
fi

cat $TMPDIR/global_cad_score \
| sed 's/^/CAD-score global score = /'
